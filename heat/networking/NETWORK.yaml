description: Heat Template - Networking - Individual for Students
heat_template_version: '2017-09-01'
parameters:
  last_name:
    constraints:
    - description: Last name must be no longer than 15 characters
      length: {max: 15, min: 1}
    - {allowed_pattern: '[a-zA-Z]*', description: Last name may only contain letters}
    default: null
    description: Last Name
    label: Last Name
    type: string
  password:
    constraints:
    - description: Password must be between 8 and 20 characters
      length: {max: 20, min: 8}
    - {allowed_pattern: '[a-zA-Z0-9]*', description: Password may not contain special
        characters}
    default: password
    description: Set root/admin password for instances
    hidden: true
    label: Password
    type: string
resources:
  external_router:
    properties:
      external_gateway_info: {network: public}
      name: external_router
    type: OS::Neutron::Router
  external_router_interface_0:
    properties:
      router_id: {get_resource: external_router}
      subnet_id: {get_resource: subnet_0}
    type: OS::Neutron::RouterInterface
  firewall1:
    properties:
      diskConfig: AUTO
      flavor: cy.medium
      image: pfsense
      name:
        str_replace:
          params:
            lastname: {get_param: last_name}
          template: Firewall-lastname-pfSense
      networks:
      - port: {get_resource: firewall1_subnet_0_port}
      - port: {get_resource: firewall1_subnet_1_port}
      - port: {get_resource: firewall1_subnet_2_port}
      - port: {get_resource: firewall1_subnet_3_port}
    type: OS::Nova::Server
  firewall1_subnet_0_port:
    properties:
      fixed_ips:
      - {ip_address: 10.0.0.5}
      network_id: {get_resource: network_0}
      port_security_enabled: false
    type: OS::Neutron::Port
  firewall1_subnet_1_port:
    properties:
      fixed_ips:
      - {ip_address: 10.1.0.1}
      network_id: {get_resource: network_1}
      port_security_enabled: false
    type: OS::Neutron::Port
  firewall1_subnet_2_port:
    properties:
      fixed_ips:
      - {ip_address: 10.2.0.1}
      network_id: {get_resource: network_2}
      port_security_enabled: false
    type: OS::Neutron::Port
  firewall1_subnet_3_port:
    properties:
      fixed_ips:
      - {ip_address: 10.3.0.1}
      network_id: {get_resource: network_3}
      port_security_enabled: false
    type: OS::Neutron::Port
  host1:
    properties:
      diskConfig: AUTO
      flavor: cy.medium
      image: Debian Jessie
      name:
        str_replace:
          params:
            lastname: {get_param: last_name}
          template: H1-lastname-Debian-GUI
      networks:
      - port: {get_resource: host1_subnet_0_port}
      - port: {get_resource: host1_subnet_1_port}
      user_data:
        str_replace:
          params:
            $password: {get_param: password}
            $user: {get_param: last_name}
          template: |
            #!/bin/bash
            echo 127.0.0.1 $(hostname) >> /etc/hosts
            echo 52.247.160.149 git.cybbh.space >> /etc/hosts
            sed -i's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config
            export DEBIAN_FRONTEND=noninteractive
            apt-get update
            apt-get -y install locate dnsutils lsof ftp telnet
            apt-get -y install wireshark tcpdump p0f scapy
            apt-get -y install nmap proxychains pv
            apt-get -y install nginx proftpd gdebi
            apt-get -y install ethtool git make gcc lxde
            apt-get install flex bison build-essential checkinstall libpcap-dev libnet1-dev libpcre3-dev libnetfilter-queue-dev iptables-dev libdumbnet-dev zlib1g-dev -y
            cd /
            wget https://git.cybbh.space/CCTC/public/raw/master/heat/networking/packages_and_scripts/daq_2.0.6-1_amd64.deb
            wget https://git.cybbh.space/CCTC/public/raw/master/heat/networking/packages_and_scripts/snort_2.9.9.0-1_amd64.deb
            gdebi --non-interactive "daq_2.0.6-1_amd64.deb"
            gdebi --non-interactive "snort_2.9.9.0-1_amd64.deb"
            mkdir /etc/snort
            mkdir /etc/snort/rules
            mkdir /var/log/snort
            ldconfig
            cd /etc/snort
            touch snort.conf
            echo "include /etc/snort/rules/icmp.rules" >> snort.conf
            cd rules
            touch icmp.rules
            echo "alert icmp any any -> any any (msg:"ICMP detected"; sid:111; rev:1;)" >> icmp.rules
            git clone http://github.com/iagox86/dnscat2.git
            echo "INSTALLS COMPELTE" 
            cd dnscat2/client
            make
            #Disable TCP Offloading
            cat <<EOF > /etc/network/if-up.d/tcpoffload
            #!/bin/bash
            if [ $IFACE = \"eth1\" ]; then
                /sbin/ethtool -K eth1 tx off sg off tso off
            fi
            EOF
            chmod +x /etc/network/if-up.d/tcpoffload
            echo "CREATE USER"
            useradd $user -m -U -s /bin/bash
            usermod -aG sudo $user
            echo "root:$password" | chpasswd
            echo "$user:$password" | chpasswd
            reboot
      user_data_format: RAW
    type: OS::Nova::Server
  host1_subnet_0_port:
    properties:
      fixed_ips:
      - {ip_address: 10.0.0.1}
      network_id: {get_resource: network_0}
      port_security_enabled: false
    type: OS::Neutron::Port
  host1_subnet_1_port:
    properties:
      fixed_ips:
      - {ip_address: 10.1.0.2}
      network_id: {get_resource: network_1}
      port_security_enabled: false
    type: OS::Neutron::Port
  host2:
    properties:
      diskConfig: AUTO
      flavor: cy.medium
      image: Windows 10
      name:
        str_replace:
          params:
            lastname: {get_param: last_name}
          template: H2-lastname-Windows-10
      networks:
      - port: {get_resource: host2_subnet_0_port}
      - port: {get_resource: host2_subnet_1_port}
      user_data:
        str_replace:
          params:
            $password: {get_param: password}
            $user: {get_param: last_name}
          template: '#ps1_sysnative

            $ErrorActionPreference = ''SilentlyContinue''

            netsh advfirewall set allprofiles state off

            set-ItemProperty -Path ''HKLM:\Software\Microsoft\Windows\CurrentVersion\Policies\System''
            -name "dontdisplaylastusername" -Value 1

            netsh int tcp set global chimney=disabled

            net user /add $user $password /y

            exit 1001

            '
      user_data_format: RAW
    type: OS::Nova::Server
  host2_subnet_0_port:
    properties:
      fixed_ips:
      - {ip_address: 10.0.0.2}
      network_id: {get_resource: network_0}
      port_security_enabled: false
    type: OS::Neutron::Port
  host2_subnet_1_port:
    properties:
      fixed_ips:
      - {ip_address: 10.1.0.3}
      network_id: {get_resource: network_1}
      port_security_enabled: false
    type: OS::Neutron::Port
  host3:
    properties:
      diskConfig: AUTO
      flavor: cy.medium
      image: Debian Jessie
      name:
        str_replace:
          params:
            lastname: {get_param: last_name}
          template: H3-lastname-Debian
      networks:
      - port: {get_resource: host3_subnet_0_port}
      - port: {get_resource: host3_subnet_2_port}
      user_data:
        str_replace:
          params:
            $password: {get_param: password}
            $user: {get_param: last_name}
          template: |
            #!/bin/bash
            echo 127.0.0.1 $(hostname) >> /etc/hosts
            sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config
            export DEBIAN_FRONTEND=noninteractive
            apt-get update
            apt-get -y install locate dnsutils lsof ftp telnet
            apt-get -y install nginx proftpd
            apt-get -y install ethtool ruby ruby-dev gem git make bundler
            gem install bundler
            git clone http://github.com/iagox86/dnscat2.git
            echo "INSTALLS COMPLETE"
            cd dnscat2/server
            bundle install
            echo "SETUP WEBPAGE"
            echo "<html><h1>Page</h1>This is a blank webpage on H3.</html>" >> /var/www/html/index.html            
            sed -i '/# Use this to jail/a \
            DefaultRoot         /srv/ftp' /etc/proftpd/proftpd.conf 
            echo "SETUP FTP FILE"
            service proftpd restart
            touch /srv/ftp/ftp.txt
            echo "This is a file hosted via ftp and accessible via anonymous login on H3." >> /srv/ftp/ftp.txt
            #Disable TCP Offloading
            cat <<EOF > /etc/network/if-up.d/tcpoffload
            #!/bin/bash
            if [ $IFACE = \"eth1\" ]; then
                /sbin/ethtool -K eth1 tx off sg off tso off
            fi
            EOF
            chmod +x /etc/network/if-up.d/tcpoffload
            echo "CREATE USER"
            useradd $user -m -U -s /bin/bash
            usermod -aG sudo $user
            echo "root:$password" | chpasswd
            echo "$user:$password" | chpasswd
            reboot
      user_data_format: RAW
    type: OS::Nova::Server
  host3_subnet_0_port:
    properties:
      fixed_ips:
      - {ip_address: 10.0.0.4}
      network_id: {get_resource: network_0}
      port_security_enabled: false
    type: OS::Neutron::Port
  host3_subnet_2_port:
    properties:
      fixed_ips:
      - {ip_address: 10.2.0.2}
      network_id: {get_resource: network_2}
      port_security_enabled: false
    type: OS::Neutron::Port
  host4:
    properties:
      diskConfig: AUTO
      flavor: cy.medium
      image: Debian Jessie
      name:
        str_replace:
          params:
            lastname: {get_param: last_name}
          template: H4-lastname-DMZ-Client
      networks:
      - port: {get_resource: host4_subnet_0_port}
      - port: {get_resource: host4_subnet_3_port}
      user_data:
        str_replace:
          params:
            $password: {get_param: password}
            $user: {get_param: last_name}
          template: |
           #!/bin/bash
           echo 127.0.0.1 $(hostname) >> /etc/hosts
           echo 52.247.160.149 git.cybbh.space >> /etc/hosts
           sed -i's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config
           export DEBIAN_FRONTEND=noninteractive
           apt-get update
           apt-get -y install ethtool
           echo "INSTALLS COMPELTE"
           echo "CREATE NETCAT LISTENERS"
           touch /file1.txt
           chmod 777 /file1.txt
           echo "Buggs Bunny says you are a success" > /file1.txt
           touch /file2.txt
           chmod 777 /file2.txt
           echo "Honey Badger says try again" > /file2.txt
           wget -O /etc/init.d/autostart https://git.cybbh.space/CCTC/public/raw/master/heat/networking/packages_and_scripts/autostart  
           chmod 777 /etc/init.d/autostart
           update-rc.d autostart defaults
           echo "CREATE USER"
           useradd $user -m -U -s /bin/bash
           usermod -aG sudo $user
           echo "root:$password" | chpasswd
           echo "$user:$password" | chpasswd
           reboot
      user_data_format: RAW
    type: OS::Nova::Server
  host4_subnet_0_port:
    properties:
      fixed_ips:
      - {ip_address: 10.0.0.6}
      network_id: {get_resource: network_0}
      port_security_enabled: false
    type: OS::Neutron::Port
  host4_subnet_3_port:
    properties:
      fixed_ips:
      - {ip_address: 10.3.0.2}
      network_id: {get_resource: network_3}
      port_security_enabled: false
    type: OS::Neutron::Port
  network_0:
    properties: {admin_state_up: true, name: Net0, shared: false}
    type: OS::Neutron::Net
  network_1:
    properties: {admin_state_up: true, name: Net1, shared: false}
    type: OS::Neutron::Net
  network_2:
    properties: {admin_state_up: true, name: Net2, shared: false}
    type: OS::Neutron::Net
  network_3:
    properties: {admin_state_up: true, name: Net3, shared: false}
    type: OS::Neutron::Net
  subnet_0:
    properties:
      allocation_pools:
      - {end: 10.0.0.250, start: 10.0.0.200}
      cidr: 10.0.0.0/24
      dns_nameservers: [10.50.255.254]
      enable_dhcp: true
      gateway_ip: 10.0.0.254
      host_routes: []
      ip_version: 4
      name: subnet0
      network_id: {get_resource: network_0}
    type: OS::Neutron::Subnet
  subnet_1:
    properties:
      allocation_pools:
      - {end: 10.1.0.250, start: 10.1.0.200}
      cidr: 10.1.0.0/24
      dns_nameservers: [10.50.255.254]
      enable_dhcp: true
      gateway_ip:
      host_routes:
      - {destination: 10.1.0.0/24, nexthop: 10.1.0.1}
      - {destination: 10.2.0.0/24, nexthop: 10.1.0.1}
      - {destination: 10.3.0.0/24, nexthop: 10.1.0.1}
      ip_version: 4
      name: subnet1
      network_id: {get_resource: network_1}
    type: OS::Neutron::Subnet
  subnet_2:
    properties:
      allocation_pools:
      - {end: 10.2.0.250, start: 10.2.0.200}
      cidr: 10.2.0.0/24
      dns_nameservers: [10.50.255.254]
      enable_dhcp: true
      gateway_ip:
      host_routes:
      - {destination: 10.1.0.0/24, nexthop: 10.2.0.1}
      - {destination: 10.2.0.0/24, nexthop: 10.2.0.1}
      - {destination: 10.3.0.0/24, nexthop: 10.2.0.1}
      ip_version: 4
      name: subnet2
      network_id: {get_resource: network_2}
    type: OS::Neutron::Subnet
  subnet_3:
    properties:
      allocation_pools:
      - {end: 10.3.0.250, start: 10.3.0.200}
      cidr: 10.3.0.0/24
      dns_nameservers: [10.50.255.254]
      enable_dhcp: true
      gateway_ip:
      host_routes:
      - {destination: 10.1.0.0/24, nexthop: 10.3.0.1}
      - {destination: 10.2.0.0/24, nexthop: 10.3.0.1}
      - {destination: 10.3.0.0/24, nexthop: 10.3.0.1}
      ip_version: 4
      name: subnet3
      network_id: {get_resource: network_3}
    type: OS::Neutron::Subnet
