heat_template_version: 2016-10-14
description: Heat Template for Networking Capstone Part 1
resources:
  net-sec-group:
    properties:
      description: Disable security groups
      name: Disable All
      rules:
      - {port_range_max: 65535, port_range_min: 1, protocol: TCP}
      - {port_range_max: 65535, port_range_min: 1, protocol: UDP}
      - {protocol: ICMP}
    type: OS::Neutron::SecurityGroup

  external_router:
    type: OS::Neutron::Router
    properties: 
      name: external_router
      external_gateway_info: 
        network: public

  network_0:
    properties:
      admin_state_up: true
      name: Net0
      shared: false
    type: OS::Neutron::Net

  subnet_0:
    type: OS::Neutron::Subnet
    properties:
      allocation_pools:
      - end: 10.25.0.250
        start: 10.25.0.200
      cidr: 10.25.0.0/24
      dns_nameservers:
      - 10.50.255.254
      enable_dhcp: true
      gateway_ip: 10.25.0.254
      host_routes: []
      ip_version: 4
      name: subnet0
      network_id:
        get_resource: network_0

  external_router_interface_0:
    type: OS::Neutron::RouterInterface
    properties: 
      router_id: { get_resource: external_router }
      subnet_id: { get_resource: subnet_0 }

# ----- Define Hosts -----

  server_1_subnet_0_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: network_0 }
      fixed_ips:
        - ip_address: 10.25.0.1
      port_security_enabled: false

  server_1:
    type: OS::Nova::Server
    properties:
      diskConfig: AUTO
      flavor: cy.medium
      image: Debian Jessie # Debian-new
      name: Net-Final-1
      networks:
        - port: { get_resource: server_1_subnet_0_port }
      user_data:
        str_replace:
          template: |
            #!/bin/bash
            echo 127.0.0.1 $(hostname) >> /etc/hosts
            sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config

            #Install packages
            export DEBIAN_FRONTEND=noninteractive
            apt-get update
            #apt-get dist-upgrade
            apt-get -y install telnet iptables-persistent

            #Download files
            mkdir /usr/share/cctc
            wget 10.50.20.28/downloads/net-final/credentials.pcap -O /usr/share/cctc/credentials.pcap

            #Create flag file
            cat > /usr/share/cctc/flag.txt << "__EOF__"
            Look in /usr/share/cctc/credentials.pcap
            The flag consists of the credentials found in the pcap located in this directory. Use   these credentials to log into the next host in the topology via telnet.
            __EOF__

            #Configure iptables rules
            iptables -P INPUT DROP
            iptables -P FORWARD DROP
            iptables -P OUTPUT DROP
            iptables -A INPUT -s localhost -j ACCEPT
            iptables -A INPUT -s 10.25.0.1 -j ACCEPT
            iptables -A OUTPUT -d localhost -j ACCEPT
            iptables -A OUTPUT -d 10.25.0.1 -j ACCEPT
            iptables -A INPUT -s 10.25.0.2 -p icmp -j ACCEPT
            iptables -A OUTPUT -d 10.25.0.2 -p icmp -j ACCEPT
            iptables -A INPUT -s 10.25.0.5 -p icmp -j ACCEPT
            iptables -A OUTPUT -d 10.25.0.5 -p icmp -j ACCEPT
            iptables -A INPUT -s 10.25.0.6 -p icmp -j ACCEPT
            iptables -A OUTPUT -d 10.25.0.6 -p icmp -j ACCEPT
            iptables -A INPUT -p icmp --icmp-type echo-reply -j ACCEPT
            iptables -A OUTPUT -d 10.25.0.2 -p tcp --dport 23 -j ACCEPT
            iptables -A INPUT -s 10.25.0.2 -p tcp --sport 23 -j ACCEPT
            iptables -A OUTPUT -d 10.25.0.5 -p tcp --dport 23 -j ACCEPT
            iptables -A INPUT -s 10.25.0.5 -p tcp --sport 23 -j ACCEPT
            iptables -A INPUT -s 10.25.0.5 -p tcp --dport 22 -j DROP
            iptables -A INPUT -s 10.25.0.5 -j ACCEPT
            iptables -A OUTPUT -d 10.25.0.5 -p tcp --dport 22 -j DROP
            iptables -A OUTPUT -d 10.25.0.5 -j ACCEPT
            iptables -A INPUT -s 10.25.0.6 -p tcp --sport 23 -j ACCEPT
            iptables -A OUTPUT -d 10.25.0.6 -p tcp --dport 23 -j ACCEPT
            iptables -A INPUT -s 10.50.0.0/16 -p tcp --dport 22 -j ACCEPT
            iptables -A OUTPUT -d 10.50.0.0/16 -p tcp --sport 22 -j ACCEPT
            iptables-save > /etc/iptables/rules.v4

            #Enable lots of sessions
            echo "MaxSessions 240" >> /etc/ssh/sshd_config
            service ssh restart

            #Clean / Secure
            chmod o-r,o-w,o-x /var/lib/cloud
            crontab -l > /tmp/crontemp
            echo '@reboot chmod o-w /var/tmp' >> /tmp/crontemp
            echo '* * * * * for item in $(find /tmp | grep -v -e '"'"'^/tmp$'"'"'); do chmod -7 $item; done' >> /tmp/crontemp
            crontab /tmp/crontemp

            #Add Student Users
            for i in {1..40}; do
              useradd student$i -m -U -s /bin/bash
              chmod 700 /home/student$i
            done

            #Edit Student User Passwords
            echo "student1:pGCmQJ" | chpasswd
            echo "student2:vUBWy6" | chpasswd
            echo "student3:faY96H" | chpasswd
            echo "student4:skyc9e" | chpasswd
            echo "student5:bm3zqn" | chpasswd
            echo "student6:A5sJGc" | chpasswd
            echo "student7:m2FQ5x" | chpasswd
            echo "student8:PP5Fg6" | chpasswd
            echo "student9:dWdbAe" | chpasswd
            echo "student10:aeTqa8" | chpasswd
            echo "student11:DRKVEf" | chpasswd
            echo "student12:QBzxcw" | chpasswd
            echo "student13:KqPydT" | chpasswd
            echo "student14:V524Jy" | chpasswd
            echo "student15:QzBDL5" | chpasswd
            echo "student16:UAnRjQ" | chpasswd
            echo "student17:y2W6eT" | chpasswd
            echo "student18:JZsZpG" | chpasswd
            echo "student19:kJyseF" | chpasswd
            echo "student20:6vFGJB" | chpasswd
            echo "student21:WLDu8R" | chpasswd
            echo "student22:WnyfQJ" | chpasswd
            echo "student23:pDuwXq" | chpasswd
            echo "student24:zYMHNz" | chpasswd
            echo "student25:QEFdRe" | chpasswd
            echo "student26:j4rthY" | chpasswd
            echo "student27:QggunQ" | chpasswd
            echo "student28:pzW9Uk" | chpasswd
            echo "student29:kqYRmK" | chpasswd
            echo "student30:dkVZE2" | chpasswd
            echo "student31:NgVBuy" | chpasswd
            echo "student32:qwZWBT" | chpasswd
            echo "student33:L67Sjk" | chpasswd
            echo "student34:jLFzLH" | chpasswd
            echo "student35:cTfYka" | chpasswd
            echo "student36:RTQrkW" | chpasswd
            echo "student37:GPaJgW" | chpasswd
            echo "student38:VbJ79D" | chpasswd
            echo "student39:UCJHvA" | chpasswd
            echo "student40:dFgBcu" | chpasswd

            #Debugging add admin user
            useradd $user -m -U -s /bin/bash
            usermod -aG sudo $user
            chmod 700 /home/$user
            echo "$user:$password" | chpasswd

            reboot
          params:
            $user: admin
            $password: AdminPasswordFinalCCTC2016
            $studentID: 0
      user_data_format: RAW

  server_2_subnet_0_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: network_0 }
      fixed_ips:
        - ip_address: 10.25.0.2
      port_security_enabled: false

  server_2:
    type: OS::Nova::Server
    properties:
      diskConfig: AUTO
      flavor: cy.medium
      image: Debian Jessie # Debian-new
      name: Net-Final-2
      networks:
        - port: { get_resource: server_2_subnet_0_port }
      user_data:
        str_replace:
          template: |
            #!/bin/bash
            echo 127.0.0.1 $(hostname) >> /etc/hosts
            sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config

            #Install packages
            export DEBIAN_FRONTEND=noninteractive
            apt-get update
            #apt-get dist-upgrade
            apt-get -y install telnetd iptables-persistent

            #Download files
            mkdir /usr/share/cctc
            wget 10.50.20.28/downloads/net-final/ios-config.txt -O /usr/share/cctc/ios-config.txt

            #Create flag file
            cat > /usr/share/cctc/flag.txt << "__EOF__"
            Look in /usr/share/cctc/ios-config.txt
            The flag the most prominent security issue within the configuration file provided. Hint- you may need to write down the info and use a tool online to figure out the actual text. Don't submit an encrypted answer.
            __EOF__

            #Configure iptables rules
            iptables -P INPUT DROP
            iptables -P FORWARD DROP
            iptables -P OUTPUT DROP
            iptables -A INPUT -s localhost -j ACCEPT
            iptables -A INPUT -s 10.25.0.2 -j ACCEPT
            iptables -A OUTPUT -d localhost -j ACCEPT
            iptables -A OUTPUT -d 10.25.0.2 -j ACCEPT
            iptables -A INPUT -s 10.25.0.1 -p icmp -j ACCEPT
            iptables -A OUTPUT -d 10.25.0.1 -p icmp -j ACCEPT
            iptables -A INPUT -s 10.25.0.3 -p icmp -j ACCEPT
            iptables -A OUTPUT -d 10.25.0.3 -p icmp -j ACCEPT
            iptables -A INPUT -p icmp --icmp-type echo-reply -j ACCEPT
            iptables -A INPUT -s 10.25.0.1 -p tcp --dport 23 -j ACCEPT
            iptables -A OUTPUT -d 10.25.0.1 -p tcp --sport 23 -j ACCEPT
            iptables -A OUTPUT -d 10.25.0.3 -p tcp --dport 22 -j ACCEPT
            iptables -A INPUT -s 10.25.0.3 -p tcp --sport 22 -j ACCEPT
            iptables-save > /etc/iptables/rules.v4

            #Enable lots of sessions
            echo "instances = unlimited" /etc/inetd.conf
            service inetd restart

            #Enable lots of sessions
            echo "instances = unlimited" /etc/inetd.conf
            service inetd restart

            #Clean / Secure
            chmod o-r,o-w,o-x /var/lib/cloud
            crontab -l > /tmp/crontemp
            echo '@reboot chmod o-w /var/tmp' >> /tmp/crontemp
            echo '* * * * * for item in $(find /tmp | grep -v -e '"'"'^/tmp$'"'"'); do rm -rf $item; done' >> /tmp/crontemp
            crontab /tmp/crontemp

            #Add User
            useradd cctc -m -U -s /bin/bash
            chown root:root /home/cctc
            chmod -w /home/cctc
            echo "cctc:dangermouse" | chpasswd

            #Debugging add test user
            useradd $user -m -U -s /bin/bash
            usermod -aG sudo $user
            chmod 700 /home/$user
            echo "$user:$password" | chpasswd

            reboot
          params:
            $user: admin
            $password: AdminPasswordFinalCCTC2016
            $studentID: 0
      user_data_format: RAW

  server_3_subnet_0_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: network_0 }
      fixed_ips:
        - ip_address: 10.25.0.3
      port_security_enabled: false

  server_3:
    type: OS::Nova::Server
    properties:
      diskConfig: AUTO
      flavor: cy.medium
      image: Debian Jessie # Debian-new
      name: Net-Final-3
      networks:
        - port: { get_resource: server_3_subnet_0_port }
      user_data:
        str_replace:
          template: |
            #!/bin/bash
            echo 127.0.0.1 $(hostname) >> /etc/hosts
            sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config

            #Install packages
            export DEBIAN_FRONTEND=noninteractive
            apt-get update
            #apt-get dist-upgrade
            apt-get -y install tcpdump iptables-persistent
            chmod u+s /usr/sbin/tcpdump

            #Download files
            mkdir /usr/share/cctc
            wget 10.50.20.28/downloads/net-final/large-pcap.pcapng -O /usr/share/cctc/large-pcap.pcap

            #Create flag file
            cat > /usr/share/cctc/flag.txt << "__EOF__"
            Look in /usr/share/cctc/large-pcap.pcap
            The flag is domain name and IP that the user was browsing to in the pcap via http, plus the number of DNS queries captured by the pcap. By the way...this host sure uses some funny ports. Maybe other hosts use funny ports too.
            __EOF__

            #Listener for instructions
            cat > /root/listen.py <<"__EOF__"
            #!/usr/bin/env python
            import socket
            import time

            s = socket.socket()
            s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
            s.bind(('0.0.0.0', 666))
            s.listen(5)

            while True:
                time.sleep(60)
            __EOF__

            cat > /etc/init.d/autolaunch <<"__EOF__"
            #!/bin/bash

            ### BEGIN INIT INFO
            # Provides:          autolaunch
            # Required-Start:    
            # Required-Stop:     
            # Default-Start:     2 3 4 5
            # Default-Stop:      0 1 6
            # Short-Description: 
            # Description:       
            ### END INIT INFO

            case "$1" in
                start)
                    ((python /root/listen.py) &)
                    ;;
                *)
                    ;;
            esac
            exit 0
            __EOF__
            chmod +x /etc/init.d/autolaunch
            update-rc.d autolaunch defaults

            #Configure iptables rules
            iptables -P INPUT DROP
            iptables -P FORWARD DROP
            iptables -P OUTPUT DROP
            iptables -A INPUT -s localhost -j ACCEPT
            iptables -A INPUT -s 10.25.0.3 -j ACCEPT
            iptables -A OUTPUT -d localhost -j ACCEPT
            iptables -A OUTPUT -d 10.25.0.3 -j ACCEPT
            iptables -A INPUT -s 10.25.0.2 -p icmp -j ACCEPT
            iptables -A OUTPUT -d 10.25.0.2 -p icmp -j ACCEPT
            iptables -A INPUT -s 10.25.0.4 -p icmp -j ACCEPT
            iptables -A OUTPUT -d 10.25.0.4 -p icmp -j ACCEPT
            iptables -A INPUT -p icmp --icmp-type echo-reply -j ACCEPT
            iptables -A INPUT -s 10.25.0.2 -p tcp --dport 22 -j ACCEPT
            iptables -A OUTPUT -d 10.25.0.2 -p tcp --sport 22 -j ACCEPT
            iptables -A OUTPUT -d 10.25.0.4 -p tcp --dport 666 -j ACCEPT
            iptables -A INPUT -s 10.25.0.4 -p tcp --sport 666 -j ACCEPT
            iptables -A OUTPUT -d 10.25.0.4 -p tcp --sport 666 -j ACCEPT
            iptables -A INPUT -s 10.25.0.4 -p tcp --dport 666 -j ACCEPT
            iptables-save > /etc/iptables/rules.v4

            #Enable lots of sessions
            echo "MaxSessions 240" >> /etc/ssh/sshd_config
            service ssh restart

            #Clean / Secure
            chmod o-r,o-w,o-x /var/lib/cloud
            crontab -l > /tmp/crontemp
            echo '@reboot chmod o-w /var/tmp' >> /tmp/crontemp
            echo '* * * * * for item in $(find /tmp | grep -v -e '"'"'^/tmp$'"'"'); do chmod -7 $item; done' >> /tmp/crontemp
            crontab /tmp/crontemp

            #Add Student Users
            for i in {1..40}; do
              useradd student$i -m -U -s /bin/bash
              chmod 700 /home/student$i
            done

            #Edit Student User Passwords
            echo "student1:pGCmQJ" | chpasswd
            echo "student2:vUBWy6" | chpasswd
            echo "student3:faY96H" | chpasswd
            echo "student4:skyc9e" | chpasswd
            echo "student5:bm3zqn" | chpasswd
            echo "student6:A5sJGc" | chpasswd
            echo "student7:m2FQ5x" | chpasswd
            echo "student8:PP5Fg6" | chpasswd
            echo "student9:dWdbAe" | chpasswd
            echo "student10:aeTqa8" | chpasswd
            echo "student11:DRKVEf" | chpasswd
            echo "student12:QBzxcw" | chpasswd
            echo "student13:KqPydT" | chpasswd
            echo "student14:V524Jy" | chpasswd
            echo "student15:QzBDL5" | chpasswd
            echo "student16:UAnRjQ" | chpasswd
            echo "student17:y2W6eT" | chpasswd
            echo "student18:JZsZpG" | chpasswd
            echo "student19:kJyseF" | chpasswd
            echo "student20:6vFGJB" | chpasswd
            echo "student21:WLDu8R" | chpasswd
            echo "student22:WnyfQJ" | chpasswd
            echo "student23:pDuwXq" | chpasswd
            echo "student24:zYMHNz" | chpasswd
            echo "student25:QEFdRe" | chpasswd
            echo "student26:j4rthY" | chpasswd
            echo "student27:QggunQ" | chpasswd
            echo "student28:pzW9Uk" | chpasswd
            echo "student29:kqYRmK" | chpasswd
            echo "student30:dkVZE2" | chpasswd
            echo "student31:NgVBuy" | chpasswd
            echo "student32:qwZWBT" | chpasswd
            echo "student33:L67Sjk" | chpasswd
            echo "student34:jLFzLH" | chpasswd
            echo "student35:cTfYka" | chpasswd
            echo "student36:RTQrkW" | chpasswd
            echo "student37:GPaJgW" | chpasswd
            echo "student38:VbJ79D" | chpasswd
            echo "student39:UCJHvA" | chpasswd
            echo "student40:dFgBcu" | chpasswd

            #Debugging add test user
            useradd $user -m -U -s /bin/bash
            usermod -aG sudo $user
            chmod 700 /home/$user
            echo "$user:$password" | chpasswd

            reboot
          params:
            $user: admin
            $password: AdminPasswordFinalCCTC2016
            $studentID: 0
      user_data_format: RAW

  server_4_subnet_0_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: network_0 }
      fixed_ips:
        - ip_address: 10.25.0.4
      port_security_enabled: false

  server_4:
    type: OS::Nova::Server
    properties:
      diskConfig: AUTO
      flavor: cy.medium
      image: Debian Jessie # Debian-new
      name: Net-Final-4
      networks:
        - port: { get_resource: server_4_subnet_0_port }
      user_data:
        str_replace:
          template: |
            #!/bin/bash
            echo 127.0.0.1 $(hostname) >> /etc/hosts
            sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config

            #Install packages
            export DEBIAN_FRONTEND=noninteractive
            apt-get update
            #apt-get dist-upgrade
            apt-get -y install iptables-persistent

            #Listener for instructions
            cat > /root/listen.py <<"__EOF__"
            #!/usr/bin/env python
            import socket
            import time

            s = socket.socket()
            s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
            s.bind(('0.0.0.0', 666))
            s.listen(5)

            while True:
                c, addr = s.accept()
                c.send("This system connects to 10.25.0.3 port 666 every 5 seconds and sends the flag.")
                c.close()
            __EOF__

            cat > /root/connect.py <<"__EOF__"
            #!/usr/bin/env python
            import socket
            import time

            while True:
                s = socket.socket()
                s.connect(('10.25.0.3', 666))
                s.send("Flag = Catch Me If You Can!")
                s.close()
                time.sleep(5)
            __EOF__

            cat > /etc/init.d/autolaunch <<"__EOF__"
            #!/bin/bash

            ### BEGIN INIT INFO
            # Provides:          autolaunch
            # Required-Start:    
            # Required-Stop:     
            # Default-Start:     2 3 4 5
            # Default-Stop:      0 1 6
            # Short-Description: 
            # Description:       
            ### END INIT INFO

            case "$1" in
                start)
                    ((python /root/listen.py) &)
                    ((python /root/connect.py) &)
                    ;;
                *)
                    ;;
            esac
            exit 0
            __EOF__
            chmod +x /etc/init.d/autolaunch
            update-rc.d autolaunch defaults

            #Configure iptables rules
            iptables -P INPUT DROP
            iptables -P FORWARD DROP
            iptables -P OUTPUT DROP
            iptables -A INPUT -s localhost -j ACCEPT
            iptables -A INPUT -s 10.25.0.4 -j ACCEPT
            iptables -A OUTPUT -d localhost -j ACCEPT
            iptables -A OUTPUT -d 10.25.0.4 -j ACCEPT
            iptables -A INPUT -s 10.25.0.3 -p icmp -j ACCEPT
            iptables -A OUTPUT -d 10.25.0.3 -p icmp -j ACCEPT
            iptables -A INPUT -p icmp --icmp-type echo-reply -j ACCEPT
            iptables -A INPUT -s 10.25.0.3 -p tcp --dport 666 -j ACCEPT
            iptables -A OUTPUT -d 10.25.0.3 -p tcp --sport 666 -j ACCEPT
            iptables -A OUTPUT -d 10.25.0.3 -p tcp --dport 666 -j ACCEPT
            iptables -A INPUT -s 10.25.0.3 -p tcp --sport 666 -j ACCEPT
            iptables-save > /etc/iptables/rules.v4

            #Debugging add test user
            useradd $user -m -U -s /bin/bash
            usermod -aG sudo $user
            chmod 700 /home/$user
            echo "$user:$password" | chpasswd

            reboot
          params:
            $user: admin
            $password: AdminPasswordFinalCCTC2016
            $studentID: 0
      user_data_format: RAW

  server_5_subnet_0_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: network_0 }
      fixed_ips:
        - ip_address: 10.25.0.5
      port_security_enabled: false

  server_5:
    type: OS::Nova::Server
    properties:
      diskConfig: AUTO
      flavor: cy.medium
      image: Debian Jessie # Debian-new
      name: Net-Final-5
      networks:
        - port: { get_resource: server_5_subnet_0_port }
      user_data:
        str_replace:
          template: |
            #!/bin/bash
            echo 127.0.0.1 $(hostname) >> /etc/hosts
            sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config

            #Install packages
            export DEBIAN_FRONTEND=noninteractive
            apt-get update
            #apt-get dist-upgrade
            apt-get -y install telnetd iptables-persistent nginx imagemagick

            #Create flag file
            cat > /var/www/html/index.html << "__EOF__"
            <html>
            <a href="./flag.png">flag.png</a>
            </html>
            __EOF__

            cat > /tmp/ascii.txt << "__EOF__"
            text 1,15 "Cat pictures are essential to the internet
            "
            __EOF__

            convert -size 500x100 xc:white -font "FreeMono" -pointsize 24 -fill black -draw @/tmp/ascii.txt /var/www/html/flag.png

            for file in $(find /var/www/html); do
              chown www-data:www-data $file
              chmod o-r,o-w,o-x $file
            done

            #Configure iptables rules
            iptables -P INPUT DROP
            iptables -P FORWARD DROP
            iptables -P OUTPUT DROP
            iptables -A INPUT -s localhost -j ACCEPT
            iptables -A INPUT -s 10.25.0.5 -j ACCEPT
            iptables -A OUTPUT -d localhost -j ACCEPT
            iptables -A OUTPUT -d 10.25.0.5 -j ACCEPT
            iptables -A INPUT -s 10.25.0.1 -p icmp -j ACCEPT
            iptables -A OUTPUT -d 10.25.0.1 -p icmp -j ACCEPT
            iptables -A INPUT -p icmp --icmp-type echo-reply -j ACCEPT
            iptables -A INPUT -s 10.25.0.1 -p tcp --dport 23 -j ACCEPT
            iptables -A OUTPUT -d 10.25.0.1 -p tcp --sport 23 -j ACCEPT
            iptables -A INPUT -p tcp --dport 22 -j DROP
            iptables -A OUTPUT -p tcp --dport 22 -j DROP
            iptables -A INPUT -s 10.25.0.1 -j ACCEPT
            iptables -A OUTPUT -d 10.25.0.1 -j ACCEPT
            iptables-save > /etc/iptables/rules.v4

            #Enable lots of sessions
            echo "instances = unlimited" /etc/inetd.conf
            service inetd restart

            #Clean / Secure
            chmod o-r,o-w,o-x /var/lib/cloud
            crontab -l > /tmp/crontemp
            echo '@reboot chmod o-w /var/tmp' >> /tmp/crontemp
            echo '* * * * * for item in $(find /tmp | grep -v -e '"'"'^/tmp$'"'"'); do chmod -7 $item; done' >> /tmp/crontemp
            crontab /tmp/crontemp

            #Add Student Users
            for i in {1..40}; do
              useradd student$i -m -U -s /bin/bash
              chmod 700 /home/student$i
            done

            #Edit Student User Passwords
            echo "student1:pGCmQJ" | chpasswd
            echo "student2:vUBWy6" | chpasswd
            echo "student3:faY96H" | chpasswd
            echo "student4:skyc9e" | chpasswd
            echo "student5:bm3zqn" | chpasswd
            echo "student6:A5sJGc" | chpasswd
            echo "student7:m2FQ5x" | chpasswd
            echo "student8:PP5Fg6" | chpasswd
            echo "student9:dWdbAe" | chpasswd
            echo "student10:aeTqa8" | chpasswd
            echo "student11:DRKVEf" | chpasswd
            echo "student12:QBzxcw" | chpasswd
            echo "student13:KqPydT" | chpasswd
            echo "student14:V524Jy" | chpasswd
            echo "student15:QzBDL5" | chpasswd
            echo "student16:UAnRjQ" | chpasswd
            echo "student17:y2W6eT" | chpasswd
            echo "student18:JZsZpG" | chpasswd
            echo "student19:kJyseF" | chpasswd
            echo "student20:6vFGJB" | chpasswd
            echo "student21:WLDu8R" | chpasswd
            echo "student22:WnyfQJ" | chpasswd
            echo "student23:pDuwXq" | chpasswd
            echo "student24:zYMHNz" | chpasswd
            echo "student25:QEFdRe" | chpasswd
            echo "student26:j4rthY" | chpasswd
            echo "student27:QggunQ" | chpasswd
            echo "student28:pzW9Uk" | chpasswd
            echo "student29:kqYRmK" | chpasswd
            echo "student30:dkVZE2" | chpasswd
            echo "student31:NgVBuy" | chpasswd
            echo "student32:qwZWBT" | chpasswd
            echo "student33:L67Sjk" | chpasswd
            echo "student34:jLFzLH" | chpasswd
            echo "student35:cTfYka" | chpasswd
            echo "student36:RTQrkW" | chpasswd
            echo "student37:GPaJgW" | chpasswd
            echo "student38:VbJ79D" | chpasswd
            echo "student39:UCJHvA" | chpasswd
            echo "student40:dFgBcu" | chpasswd

            #Debugging add test user
            useradd $user -m -U -s /bin/bash
            usermod -aG sudo $user
            chmod 700 /home/$user
            echo "$user:$password" | chpasswd

            reboot
          params:
            $user: admin
            $password: AdminPasswordFinalCCTC2016
            $studentID: 0
      user_data_format: RAW

  server_6_subnet_0_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: network_0 }
      fixed_ips:
        - ip_address: 10.25.0.6
      port_security_enabled: false

  server_6:
    type: OS::Nova::Server
    properties:
      diskConfig: AUTO
      flavor: cy.medium
      image: Debian Jessie # Debian-new
      name: Net-Final-6
      networks:
        - port: { get_resource: server_6_subnet_0_port }
      user_data:
        str_replace:
          template: |
            #!/bin/bash
            echo 127.0.0.1 $(hostname) >> /etc/hosts
            sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config

            #Install packages
            export DEBIAN_FRONTEND=noninteractive
            apt-get update
            #apt-get dist-upgrade
            apt-get -y install telnetd iptables-persistent nginx

            rm /usr/bin/wget

            #Create flag file
            cat > /var/www/html/index.html << "__EOF__"
            <html>
            <h1>You found the flag!</h1>
            Flag = 640K is more memory than anyone will ever need
            </html>
            __EOF__

            for file in $(find /var/www/html); do
              chown www-data:www-data $file
              chmod o-r,o-w,o-x $file
            done

            #Configure iptables rules
            iptables -P INPUT DROP
            iptables -P FORWARD DROP
            iptables -P OUTPUT DROP640K
            iptables -A INPUT -s localhost -j ACCEPT
            iptables -A INPUT -s 10.25.0.6 -j ACCEPT
            iptables -A OUTPUT -d localhost -j ACCEPT
            iptables -A OUTPUT -d 10.25.0.6 -j ACCEPT
            iptables -A INPUT -s 10.25.0.1 -p icmp -j ACCEPT
            iptables -A OUTPUT -d 10.25.0.1 -p icmp -j ACCEPT
            iptables -A INPUT -p icmp --icmp-type echo-reply -j ACCEPT
            iptables -A INPUT -s 10.25.0.1 -p tcp --dport 23 -j ACCEPT
            iptables -A OUTPUT -d 10.25.0.1 -p tcp --sport 23 -j ACCEPT
            iptables-save > /etc/iptables/rules.v4

            #Enable lots of sessions
            echo "instances = unlimited" /etc/inetd.conf
            service inetd restart

            #Clean / Secure
            chmod o-r,o-w,o-x /var/lib/cloud
            crontab -l > /tmp/crontemp
            echo '@reboot chmod o-w /var/tmp' >> /tmp/crontemp
            echo '* * * * * for item in $(find /tmp | grep -v -e '"'"'^/tmp$'"'"'); do chmod -7 $item; done' >> /tmp/crontemp
            crontab /tmp/crontemp

            #Add Student Users
            for i in {1..40}; do
              useradd student$i -m -U -s /bin/bash
              chmod 700 /home/student$i
            done

            #Edit Student User Passwords
            echo "student1:pGCmQJ" | chpasswd
            echo "student2:vUBWy6" | chpasswd
            echo "student3:faY96H" | chpasswd
            echo "student4:skyc9e" | chpasswd
            echo "student5:bm3zqn" | chpasswd
            echo "student6:A5sJGc" | chpasswd
            echo "student7:m2FQ5x" | chpasswd
            echo "student8:PP5Fg6" | chpasswd
            echo "student9:dWdbAe" | chpasswd
            echo "student10:aeTqa8" | chpasswd
            echo "student11:DRKVEf" | chpasswd
            echo "student12:QBzxcw" | chpasswd
            echo "student13:KqPydT" | chpasswd
            echo "student14:V524Jy" | chpasswd
            echo "student15:QzBDL5" | chpasswd
            echo "student16:UAnRjQ" | chpasswd
            echo "student17:y2W6eT" | chpasswd
            echo "student18:JZsZpG" | chpasswd
            echo "student19:kJyseF" | chpasswd
            echo "student20:6vFGJB" | chpasswd
            echo "student21:WLDu8R" | chpasswd
            echo "student22:WnyfQJ" | chpasswd
            echo "student23:pDuwXq" | chpasswd
            echo "student24:zYMHNz" | chpasswd
            echo "student25:QEFdRe" | chpasswd
            echo "student26:j4rthY" | chpasswd
            echo "student27:QggunQ" | chpasswd
            echo "student28:pzW9Uk" | chpasswd
            echo "student29:kqYRmK" | chpasswd
            echo "student30:dkVZE2" | chpasswd
            echo "student31:NgVBuy" | chpasswd
            echo "student32:qwZWBT" | chpasswd
            echo "student33:L67Sjk" | chpasswd
            echo "student34:jLFzLH" | chpasswd
            echo "student35:cTfYka" | chpasswd
            echo "student36:RTQrkW" | chpasswd
            echo "student37:GPaJgW" | chpasswd
            echo "student38:VbJ79D" | chpasswd
            echo "student39:UCJHvA" | chpasswd
            echo "student40:dFgBcu" | chpasswd

            #Debugging add test user
            useradd $user -m -U -s /bin/bash
            usermod -aG sudo $user
            chmod 700 /home/$user
            echo "$user:$password" | chpasswd

            reboot
          params:
            $user: admin
            $password: AdminPasswordFinalCCTC2016
            $studentID: 0
      user_data_format: RAW
