heat_template_version: 2016-10-14

description: Heat Template - Shared Infrastructure SSH Tunneling

resources:

  external_router:
    type: OS::Neutron::Router
    properties: 
      name: external_router
      external_gateway_info: 
        network: public

  network_1:
    properties:
      admin_state_up: true
      name: Net1
      shared: false
    type: OS::Neutron::Net

  subnet_1:
    type: OS::Neutron::Subnet
    properties:
      allocation_pools:
      - end: 10.1.0.250
        start: 10.1.0.200
      cidr: 10.1.0.0/24
      dns_nameservers:
      - 10.50.255.254
      enable_dhcp: true
      gateway_ip: 10.1.0.254
      host_routes: []
      ip_version: 4
      name: subnet0
      network_id:
        get_resource: network_1

  external_router_interface_1:
    type: OS::Neutron::RouterInterface
    properties: 
      router_id: { get_resource: external_router }
      subnet_id: { get_resource: subnet_1 }

  network_2:
    properties:
      admin_state_up: true
      name: Net2
      shared: false
    type: OS::Neutron::Net

  subnet_2:
    type: OS::Neutron::Subnet
    properties:
      allocation_pools:
      - end: 10.2.0.250
        start: 10.2.0.200
      cidr: 10.2.0.0/24
      dns_nameservers:
      - 10.50.255.254
      enable_dhcp: true
      gateway_ip: 10.2.0.254
      host_routes: []
      ip_version: 4
      name: subnet0
      network_id:
        get_resource: network_2

  external_router_interface_2:
    type: OS::Neutron::RouterInterface
    properties: 
      router_id: { get_resource: external_router }
      subnet_id: { get_resource: subnet_2 }

  network_3:
    properties:
      admin_state_up: true
      name: Net3
      shared: false
    type: OS::Neutron::Net

  subnet_3:
    type: OS::Neutron::Subnet
    properties:
      allocation_pools:
      - end: 10.3.0.250
        start: 10.3.0.200
      cidr: 10.3.0.0/24
      dns_nameservers:
      - 10.50.255.254
      enable_dhcp: true
      gateway_ip: 10.3.0.254
      host_routes: []
      ip_version: 4
      name: subnet0
      network_id:
        get_resource: network_3

  external_router_interface_3:
    type: OS::Neutron::RouterInterface
    properties: 
      router_id: { get_resource: external_router }
      subnet_id: { get_resource: subnet_3 }

  network_4:
    properties:
      admin_state_up: true
      name: Net4
      shared: false
    type: OS::Neutron::Net

  subnet_4:
    type: OS::Neutron::Subnet
    properties:
      allocation_pools:
      - end: 10.4.0.250
        start: 10.4.0.200
      cidr: 10.4.0.0/24
      dns_nameservers:
      - 10.50.255.254
      enable_dhcp: true
      gateway_ip: 10.4.0.254
      host_routes: []
      ip_version: 4
      name: subnet0
      network_id:
        get_resource: network_4

  external_router_interface_4:
    type: OS::Neutron::RouterInterface
    properties: 
      router_id: { get_resource: external_router }
      subnet_id: { get_resource: subnet_4 }

  network_5:
    properties:
      admin_state_up: true
      name: Net5
      shared: false
    type: OS::Neutron::Net

  subnet_5:
    type: OS::Neutron::Subnet
    properties:
      allocation_pools:
      - end: 10.5.0.250
        start: 10.5.0.200
      cidr: 10.5.0.0/24
      dns_nameservers:
      - 10.50.255.254
      enable_dhcp: true
      gateway_ip: 10.5.0.254
      host_routes: []
      ip_version: 4
      name: subnet0
      network_id:
        get_resource: network_5

  external_router_interface_5:
    type: OS::Neutron::RouterInterface
    properties: 
      router_id: { get_resource: external_router }
      subnet_id: { get_resource: subnet_5 }

  network_6:
    properties:
      admin_state_up: true
      name: Net6
      shared: false
    type: OS::Neutron::Net

  subnet_6:
    type: OS::Neutron::Subnet
    properties:
      allocation_pools:
      - end: 10.6.0.250
        start: 10.6.0.200
      cidr: 10.6.0.0/24
      dns_nameservers:
      - 10.50.255.254
      enable_dhcp: true
      gateway_ip: 10.6.0.254
      host_routes: []
      ip_version: 4
      name: subnet0
      network_id:
        get_resource: network_6

  external_router_interface_6:
    type: OS::Neutron::RouterInterface
    properties: 
      router_id: { get_resource: external_router }
      subnet_id: { get_resource: subnet_6 }

# ----- Define Hosts -----

# ----- Pivot 1 -----

  server_1_subnet_1_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: network_1 }
      fixed_ips:
        - ip_address: 10.1.0.1
      port_security_enabled: false

  server_1_subnet_1:
    type: OS::Nova::Server
    properties:
      diskConfig: AUTO
      flavor: cy.large
      image: Debian Jessie
      name: H1-Pivot
      networks:
        - port: { get_resource: server_1_subnet_1_port }
      user_data:
        str_replace:
          template: |
            #!/bin/bash
            echo 127.0.0.1 $(hostname) >> /etc/hosts
            sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config
            export DEBIAN_FRONTEND=noninteractive
            apt-get update
            apt-get -y install tcpdump iptables-persistent
            chmod u+s /usr/sbin/tcpdump
            echo 'PATH="/sbin:/usr/sbin:/usr/local/sbin:$PATH"' >> /etc/bash.bashrc
            #Policy: Reject all
            iptables -P INPUT DROP
            iptables -P FORWARD DROP
            iptables -P OUTPUT DROP
            #All connections to self allowed
            iptables -A INPUT -s localhost -j ACCEPT
            iptables -A INPUT -s 10.1.0.1 -j ACCEPT
            iptables -A OUTPUT -d localhost -j ACCEPT
            iptables -A OUTPUT -d 10.1.0.1 -j ACCEPT
            #Access from admin box
            iptables -A INPUT -s 10.0.0.1 -j ACCEPT
            iptables -A OUTPUT -d 10.0.0.1 -j ACCEPT
            #Can accept input to floating IP on 22
            iptables -A INPUT -s 10.50.0.0/16 -p tcp --dport 22 -j ACCEPT
            iptables -A OUTPUT -d 10.50.0.0/16 -p tcp --sport 22 -j ACCEPT
            #Access to reverse insider
            iptables -A INPUT -s 10.2.0.1 -p icmp -j ACCEPT
            iptables -A OUTPUT -d 10.2.0.1 -p icmp -j ACCEPT
            iptables -A INPUT -s 10.2.0.1 -p tcp --dport 22 -j ACCEPT
            iptables -A OUTPUT -d 10.2.0.1 -p tcp --sport 22 -j ACCEPT
            #Access to targets
            iptables -A INPUT -s 10.3.0.0/24 -j ACCEPT
            iptables -A OUTPUT -d 10.3.0.0/24 -j ACCEPT
            #Access to next pivot
            iptables -A INPUT -s 10.4.0.1 -j ACCEPT
            iptables -A OUTPUT -d 10.4.0.1 -j ACCEPT
            #Reject everything else
            iptables -A INPUT -t filter -j REJECT
            iptables -A OUTPUT -t filter -j REJECT
            iptables-save > /etc/iptables/rules.v4
            echo "MaxSessions 240" >> /etc/ssh/sshd_config
            service ssh restart
            echo "instances = unlimited" /etc/inetd.conf
            service inetd restart
            useradd tunnel -m -U -s /usr/sbin/nologin
            echo "tunnel:password" | chpasswd
            for i in {0..45}; do
              useradd student$i -m -U -s /bin/bash
              chmod 700 /home/student$i
              echo "student$i:password$i" | chpasswd
            done
            chmod o-r,o-w,o-x /var/lib/cloud
            crontab -l > /tmp/crontemp
            echo '@reboot chmod o-w /var/tmp' >> /tmp/crontemp
            echo '* * * * * for item in $(find /tmp | grep -v -e '"'"'^/tmp$'"'"'); do chmod -7 $item; done' >> /tmp/crontemp
            crontab /tmp/crontemp
            useradd $user -m -U -s /bin/bash
            usermod -aG sudo $user
            chmod 700 /home/$user
            echo "root:RootSSHTunnelingPassword" | chpasswd
            echo "$user:$password" | chpasswd
            reboot
          params:
            $user: admin
            $password: AdminPasswordCCTC2017
            $studentID: 0
      user_data_format: RAW

# ----- Reverse Network 1 -----

  server_1_subnet_2_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: network_2 }
      fixed_ips:
        - ip_address: 10.2.0.1
      port_security_enabled: false

  server_1_subnet_2:
    type: OS::Nova::Server
    properties:
      diskConfig: AUTO
      flavor: cy.large
      image: Debian Jessie      
      name: H2-1-Reverse-Insider
      networks:
        - port: { get_resource: server_1_subnet_2_port }
      user_data:
        str_replace:
          template: |
            #!/bin/bash
            echo 127.0.0.1 $(hostname) >> /etc/hosts
            sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config
            export DEBIAN_FRONTEND=noninteractive
            apt-get update
            apt-get -y install tcpdump telnetd nginx iptables-persistent
            chmod u+s /usr/sbin/tcpdump
            echo 'PATH="/sbin:/usr/sbin:/usr/local/sbin:$PATH"' >> /etc/bash.bashrc
            #Policy: Reject all
            iptables -P INPUT DROP
            iptables -P FORWARD DROP
            iptables -P OUTPUT DROP
            #All connections to self allowed
            iptables -A INPUT -s localhost -j ACCEPT
            iptables -A INPUT -s 10.2.0.1 -j ACCEPT
            iptables -A OUTPUT -d localhost -j ACCEPT
            iptables -A OUTPUT -d 10.2.0.1 -j ACCEPT
            #Access from admin box
            iptables -A INPUT -s 10.0.0.1 -j ACCEPT
            iptables -A OUTPUT -d 10.0.0.1 -j ACCEPT
            #Can accept input to floating IP on 23
            iptables -A INPUT -s 10.50.0.0/16 -p tcp --dport 23 -j ACCEPT
            iptables -A OUTPUT -d 10.50.0.0/16 -p tcp --sport 23 -j ACCEPT
            #Access to internal targets
            iptables -A INPUT -s 10.2.0.0/24 -j ACCEPT
            iptables -A OUTPUT -d 10.2.0.0/24 -j ACCEPT
            #Access to pivot
            iptables -A INPUT -s 10.1.0.1 -p icmp -j ACCEPT
            iptables -A OUTPUT -d 10.1.0.1 -p icmp -j ACCEPT
            iptables -A INPUT -s 10.1.0.1 -p tcp --sport 22 -j ACCEPT
            iptables -A OUTPUT -d 10.1.0.1 -p tcp --dport 22 -j ACCEPT
            #Reject everything else
            iptables -A INPUT -t filter -j REJECT
            iptables -A OUTPUT -t filter -j REJECT
            iptables-save > /etc/iptables/rules.v4
            cat > /var/www/html/index.html <<__EOF__
            <html>
            You have accessed $(hostname) at $(/sbin/ifconfig eth0 | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}') via HTTP!
            <html>
            __EOF__
            mkdir /usr/share/cctc
            cat > /usr/share/cctc/file.txt <<__EOF__
            You have accessed $(hostname) at $(/sbin/ifconfig eth0 | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}') via login!
            __EOF__
            echo "MaxSessions 240" >> /etc/ssh/sshd_config
            service ssh restart
            echo "instances = unlimited" /etc/inetd.conf
            service inetd restart
            useradd tunnel -m -U -s /usr/sbin/nologin
            echo "tunnel:password" | chpasswd
            for i in {0..45}; do
              useradd student$i -m -U -s /bin/bash
              chmod 700 /home/student$i
              echo "student$i:password$i" | chpasswd
            done
            chmod o-r,o-w,o-x /var/lib/cloud
            crontab -l > /tmp/crontemp
            echo '@reboot chmod o-w /var/tmp' >> /tmp/crontemp
            echo '* * * * * for item in $(find /tmp | grep -v -e '"'"'^/tmp$'"'"'); do chmod -7 $item; done' >> /tmp/crontemp
            crontab /tmp/crontemp
            useradd $user -m -U -s /bin/bash
            usermod -aG sudo $user
            chmod 700 /home/$user
            echo "root:RootSSHTunnelingPassword" | chpasswd
            echo "$user:$password" | chpasswd
            reboot
          params:
            $user: admin
            $password: AdminPasswordCCTC2017
            $studentID: 0
      user_data_format: RAW

  server_2_subnet_2_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: network_2 }
      fixed_ips:
        - ip_address: 10.2.0.2
      port_security_enabled: false

  server_2_subnet_2:
    type: OS::Nova::Server
    properties:
      diskConfig: AUTO
      flavor: cy.large
      image: Debian Jessie      
      name: H2-2-Reverse-Target
      networks:
        - port: { get_resource: server_2_subnet_2_port }
      user_data:
        str_replace:
          template: |
            #!/bin/bash
            echo 127.0.0.1 $(hostname) >> /etc/hosts
            sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config
            export DEBIAN_FRONTEND=noninteractive
            apt-get update
            apt-get -y install tcpdump nginx proftpd iptables-persistent
            chmod u+s /usr/sbin/tcpdump
            echo 'PATH="/sbin:/usr/sbin:/usr/local/sbin:$PATH"' >> /etc/bash.bashrc
            #Policy: Reject all
            iptables -P INPUT DROP
            iptables -P FORWARD DROP
            iptables -P OUTPUT DROP
            #All connections to self allowed
            iptables -A INPUT -s localhost -j ACCEPT
            iptables -A INPUT -s 10.2.0.2 -j ACCEPT
            iptables -A OUTPUT -d localhost -j ACCEPT
            iptables -A OUTPUT -d 10.2.0.2 -j ACCEPT
            #Access from admin box
            iptables -A INPUT -s 10.0.0.1 -j ACCEPT
            iptables -A OUTPUT -d 10.0.0.1 -j ACCEPT
            #Block SSH
            iptables -A INPUT -d 10.2.0.2 -p tcp --dport 22 -j REJECT
            iptables -A OUTPUT -s 10.2.0.2 -p tcp --sport 22 -j REJECT
            #Access to internal targets
            iptables -A INPUT -s 10.2.0.0/24 -j ACCEPT
            iptables -A OUTPUT -d 10.2.0.0/24 -j ACCEPT
            #Reject everything else
            iptables -A INPUT -t filter -j REJECT
            iptables -A OUTPUT -t filter -j REJECT
            iptables-save > /etc/iptables/rules.v4
            cat > /var/www/html/index.html <<__EOF__
            <html>
            You have accessed $(hostname) at $(/sbin/ifconfig eth0 | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}') via HTTP!
            <html>
            __EOF__
            cat > /etc/proftpd/conf.d/anonymous.conf <<"__EOF__"
            <Anonymous ~ftp>
              User				ftp
              Group				nogroup
              # We want clients to be able to login with "anonymous" as well as "ftp"
              UserAlias			anonymous ftp
              # Cosmetic changes, all files belongs to ftp user
              DirFakeUser	on ftp
              DirFakeGroup on ftp

              RequireValidShell		off

              # Limit the maximum number of anonymous logins
              MaxClients			10

              # We want 'welcome.msg' displayed at login, and '.message' displayed
              # in each newly chdired directory.
              DisplayLogin			welcome.msg
              DisplayChdir		.message

              # Limit WRITE everywhere in the anonymous chroot
              <Directory *>
                <Limit WRITE>
                  DenyAll
                </Limit>
              </Directory>

              # Uncomment this if you're brave.
              # <Directory incoming>
              #   # Umask 022 is a good standard umask to prevent new files and dirs
              #   # (second parm) from being group and world writable.
              #   Umask				022  022
              #            <Limit READ WRITE>
              #            DenyAll
              #            </Limit>
              #            <Limit STOR>
              #            AllowAll
              #            </Limit>
              # </Directory>

            </Anonymous>
            __EOF__
            service proftpd restart
            cat > /srv/ftp/ftp.txt <<__EOF__
            You have accessed $(hostname) at $(/sbin/ifconfig eth0 | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}') via FTP!
            __EOF__
            mkdir /usr/share/cctc
            cat > /usr/share/cctc/file.txt <<__EOF__
            You have accessed $(hostname) at $(/sbin/ifconfig eth0 | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}') via login!
            __EOF__
            echo "MaxSessions 240" >> /etc/ssh/sshd_config
            service ssh restart
            echo "instances = unlimited" /etc/inetd.conf
            service inetd restart
            for i in {0..45}; do
              useradd student$i -m -U -s /bin/bash
              chmod 700 /home/student$i
              echo "student$i:password$i" | chpasswd
            done
            chmod o-r,o-w,o-x /var/lib/cloud
            crontab -l > /tmp/crontemp
            echo '@reboot chmod o-w /var/tmp' >> /tmp/crontemp
            echo '* * * * * for item in $(find /tmp | grep -v -e '"'"'^/tmp$'"'"'); do chmod -7 $item; done' >> /tmp/crontemp
            crontab /tmp/crontemp
            useradd $user -m -U -s /bin/bash
            usermod -aG sudo $user
            chmod 700 /home/$user
            echo "root:RootSSHTunnelingPassword" | chpasswd
            echo "$user:$password" | chpasswd
            reboot
          params:
            $user: admin
            $password: AdminPasswordCCTC2017
            $studentID: 0
      user_data_format: RAW

  server_3_subnet_2_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: network_2 }
      fixed_ips:
        - ip_address: 10.2.0.3
      port_security_enabled: false

  server_3_subnet_2:
    type: OS::Nova::Server
    properties:
      diskConfig: AUTO
      flavor: cy.large
      image: Debian Jessie      
      name: H2-3-Reverse-Pivot
      networks:
        - port: { get_resource: server_3_subnet_2_port }
      user_data:
        str_replace:
          template: |
            #!/bin/bash
            echo 127.0.0.1 $(hostname) >> /etc/hosts
            sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config
            export DEBIAN_FRONTEND=noninteractive
            apt-get update
            apt-get -y install tcpdump telnetd iptables-persistent
            chmod u+s /usr/sbin/tcpdump
            echo 'PATH="/sbin:/usr/sbin:/usr/local/sbin:$PATH"' >> /etc/bash.bashrc
            #Policy: Reject all
            iptables -P INPUT DROP
            iptables -P FORWARD DROP
            iptables -P OUTPUT DROP
            #All connections to self allowed
            iptables -A INPUT -s localhost -j ACCEPT
            iptables -A INPUT -s 10.2.0.3 -j ACCEPT
            iptables -A OUTPUT -d localhost -j ACCEPT
            iptables -A OUTPUT -d 10.2.0.3 -j ACCEPT
            #Access from admin box
            iptables -A INPUT -s 10.0.0.1 -j ACCEPT
            iptables -A OUTPUT -d 10.0.0.1 -j ACCEPT
            #Access to internal targets
            iptables -A INPUT -s 10.2.0.0/24 -j ACCEPT
            iptables -A OUTPUT -d 10.2.0.0/24 -j ACCEPT
            #Reject everything else
            iptables -A INPUT -t filter -j REJECT
            iptables -A OUTPUT -t filter -j REJECT
            iptables-save > /etc/iptables/rules.v4
            mkdir /usr/share/cctc
            cat > /usr/share/cctc/file.txt <<__EOF__
            You have accessed $(hostname) at $(/sbin/ifconfig eth0 | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}') via login!
            __EOF__
            echo "MaxSessions 240" >> /etc/ssh/sshd_config
            service ssh restart
            echo "instances = unlimited" /etc/inetd.conf
            service inetd restart
            useradd tunnel -m -U -s /usr/sbin/nologin
            echo "tunnel:password" | chpasswd
            for i in {0..45}; do
              useradd student$i -m -U -s /bin/bash
              chmod 700 /home/student$i
              echo "student$i:password$i" | chpasswd
            done
            chmod o-r,o-w,o-x /var/lib/cloud
            crontab -l > /tmp/crontemp
            echo '@reboot chmod o-w /var/tmp' >> /tmp/crontemp
            echo '* * * * * for item in $(find /tmp | grep -v -e '"'"'^/tmp$'"'"'); do chmod -7 $item; done' >> /tmp/crontemp
            crontab /tmp/crontemp
            useradd $user -m -U -s /bin/bash
            usermod -aG sudo $user
            chmod 700 /home/$user
            echo "root:RootSSHTunnelingPassword" | chpasswd
            echo "$user:$password" | chpasswd
            reboot
          params:
            $user: admin
            $password: AdminPasswordCCTC2017
            $studentID: 0
      user_data_format: RAW

# ----- Target Network 1 -----

  server_1_subnet_3_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: network_3 }
      fixed_ips:
        - ip_address: 10.3.0.1
      port_security_enabled: false

  server_1_subnet_3:
    type: OS::Nova::Server
    properties:
      diskConfig: AUTO
      flavor: cy.large
      image: Debian Jessie      
      name: H3-1-Target
      networks:
        - port: { get_resource: server_1_subnet_3_port }
      user_data:
        str_replace:
          template: |
            #!/bin/bash
            echo 127.0.0.1 $(hostname) >> /etc/hosts
            sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config
            export DEBIAN_FRONTEND=noninteractive
            apt-get update
            apt-get -y install tcpdump nginx proftpd iptables-persistent
            chmod u+s /usr/sbin/tcpdump
            echo 'PATH="/sbin:/usr/sbin:/usr/local/sbin:$PATH"' >> /etc/bash.bashrc
            #Policy: Reject all
            iptables -P INPUT DROP
            iptables -P FORWARD DROP
            iptables -P OUTPUT DROP
            #All connections to self allowed
            iptables -A INPUT -s localhost -j ACCEPT
            iptables -A INPUT -s 10.3.0.1 -j ACCEPT
            iptables -A OUTPUT -d localhost -j ACCEPT
            iptables -A OUTPUT -d 10.3.0.1 -j ACCEPT
            #Access from admin box
            iptables -A INPUT -s 10.0.0.1 -j ACCEPT
            iptables -A OUTPUT -d 10.0.0.1 -j ACCEPT
            #Block SSH
            iptables -A INPUT -d 10.3.0.1 -p tcp --dport 22 -j REJECT
            iptables -A OUTPUT -s 10.3.0.1 -p tcp --sport 22 -j REJECT
            #Access from pivot
            iptables -A INPUT -s 10.1.0.0/24 -j ACCEPT
            iptables -A OUTPUT -d 10.1.0.0/24 -j ACCEPT
            #Reject everything else
            iptables -A INPUT -t filter -j REJECT
            iptables -A OUTPUT -t filter -j REJECT
            iptables-save > /etc/iptables/rules.v4
            cat > /var/www/html/index.html <<__EOF__
            <html>
            You have accessed $(hostname) at $(/sbin/ifconfig eth0 | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}') via HTTP!
            <html>
            __EOF__
            cat > /etc/proftpd/conf.d/anonymous.conf <<"__EOF__"
            <Anonymous ~ftp>
              User				ftp
              Group				nogroup
              # We want clients to be able to login with "anonymous" as well as "ftp"
              UserAlias			anonymous ftp
              # Cosmetic changes, all files belongs to ftp user
              DirFakeUser	on ftp
              DirFakeGroup on ftp

              RequireValidShell		off

              # Limit the maximum number of anonymous logins
              MaxClients			10

              # We want 'welcome.msg' displayed at login, and '.message' displayed
              # in each newly chdired directory.
              DisplayLogin			welcome.msg
              DisplayChdir		.message

              # Limit WRITE everywhere in the anonymous chroot
              <Directory *>
                <Limit WRITE>
                  DenyAll
                </Limit>
              </Directory>

              # Uncomment this if you're brave.
              # <Directory incoming>
              #   # Umask 022 is a good standard umask to prevent new files and dirs
              #   # (second parm) from being group and world writable.
              #   Umask				022  022
              #            <Limit READ WRITE>
              #            DenyAll
              #            </Limit>
              #            <Limit STOR>
              #            AllowAll
              #            </Limit>
              # </Directory>

            </Anonymous>
            __EOF__
            service proftpd restart
            cat > /srv/ftp/ftp.txt <<__EOF__
            You have accessed $(hostname) at $(/sbin/ifconfig eth0 | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}') via FTP!
            __EOF__
            mkdir /usr/share/cctc
            cat > /usr/share/cctc/file.txt <<__EOF__
            You have accessed $(hostname) at $(/sbin/ifconfig eth0 | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}') via login!
            __EOF__
            echo "MaxSessions 240" >> /etc/ssh/sshd_config
            service ssh restart
            echo "instances = unlimited" /etc/inetd.conf
            service inetd restart
            for i in {0..45}; do
              useradd student$i -m -U -s /bin/bash
              chmod 700 /home/student$i
              echo "student$i:password$i" | chpasswd
            done
            chmod o-r,o-w,o-x /var/lib/cloud
            crontab -l > /tmp/crontemp
            echo '@reboot chmod o-w /var/tmp' >> /tmp/crontemp
            echo '* * * * * for item in $(find /tmp | grep -v -e '"'"'^/tmp$'"'"'); do chmod -7 $item; done' >> /tmp/crontemp
            crontab /tmp/crontemp
            useradd $user -m -U -s /bin/bash
            usermod -aG sudo $user
            chmod 700 /home/$user
            echo "root:RootSSHTunnelingPassword" | chpasswd
            echo "$user:$password" | chpasswd
            reboot
          params:
            $user: admin
            $password: AdminPasswordCCTC2017
            $studentID: 0
      user_data_format: RAW

  server_27_subnet_3_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: network_3 }
      fixed_ips:
        - ip_address: 10.3.0.27
      port_security_enabled: false

  server_27_subnet_3:
    type: OS::Nova::Server
    properties:
      diskConfig: AUTO
      flavor: cy.large
      image: Debian Jessie      
      name: H3-27-Target
      networks:
        - port: { get_resource: server_27_subnet_3_port }
      user_data:
        str_replace:
          template: |
            #!/bin/bash
            echo 127.0.0.1 $(hostname) >> /etc/hosts
            sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config
            export DEBIAN_FRONTEND=noninteractive
            apt-get update
            apt-get -y install tcpdump nginx proftpd iptables-persistent
            chmod u+s /usr/sbin/tcpdump
            echo 'PATH="/sbin:/usr/sbin:/usr/local/sbin:$PATH"' >> /etc/bash.bashrc
            #Policy: Reject all
            iptables -P INPUT DROP
            iptables -P FORWARD DROP
            iptables -P OUTPUT DROP
            #All connections to self allowed
            iptables -A INPUT -s localhost -j ACCEPT
            iptables -A INPUT -s 10.3.0.27 -j ACCEPT
            iptables -A OUTPUT -d localhost -j ACCEPT
            iptables -A OUTPUT -d 10.3.0.27 -j ACCEPT
            #Access from admin box
            iptables -A INPUT -s 10.0.0.1 -j ACCEPT
            iptables -A OUTPUT -d 10.0.0.1 -j ACCEPT
            #Block SSH
            iptables -A INPUT -d 10.3.0.27 -p tcp --dport 22 -j REJECT
            iptables -A OUTPUT -s 10.3.0.27 -p tcp --sport 22 -j REJECT
            #Access from pivot
            iptables -A INPUT -s 10.1.0.0/24 -j ACCEPT
            iptables -A OUTPUT -d 10.1.0.0/24 -j ACCEPT
            #Reject everything else
            iptables -A INPUT -t filter -j REJECT
            iptables -A OUTPUT -t filter -j REJECT
            iptables-save > /etc/iptables/rules.v4
            cat > /var/www/html/index.html <<__EOF__
            <html>
            You have accessed $(hostname) at $(/sbin/ifconfig eth0 | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}') via HTTP!
            <html>
            __EOF__
            cat > /etc/proftpd/conf.d/anonymous.conf <<"__EOF__"
            <Anonymous ~ftp>
              User				ftp
              Group				nogroup
              # We want clients to be able to login with "anonymous" as well as "ftp"
              UserAlias			anonymous ftp
              # Cosmetic changes, all files belongs to ftp user
              DirFakeUser	on ftp
              DirFakeGroup on ftp

              RequireValidShell		off

              # Limit the maximum number of anonymous logins
              MaxClients			10

              # We want 'welcome.msg' displayed at login, and '.message' displayed
              # in each newly chdired directory.
              DisplayLogin			welcome.msg
              DisplayChdir		.message

              # Limit WRITE everywhere in the anonymous chroot
              <Directory *>
                <Limit WRITE>
                  DenyAll
                </Limit>
              </Directory>

              # Uncomment this if you're brave.
              # <Directory incoming>
              #   # Umask 022 is a good standard umask to prevent new files and dirs
              #   # (second parm) from being group and world writable.
              #   Umask				022  022
              #            <Limit READ WRITE>
              #            DenyAll
              #            </Limit>
              #            <Limit STOR>
              #            AllowAll
              #            </Limit>
              # </Directory>

            </Anonymous>
            __EOF__
            service proftpd restart
            cat > /srv/ftp/ftp.txt <<__EOF__
            You have accessed $(hostname) at $(/sbin/ifconfig eth0 | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}') via FTP!
            __EOF__
            mkdir /usr/share/cctc
            cat > /usr/share/cctc/file.txt <<__EOF__
            You have accessed $(hostname) at $(/sbin/ifconfig eth0 | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}') via login!
            __EOF__
            echo "MaxSessions 240" >> /etc/ssh/sshd_config
            service ssh restart
            echo "instances = unlimited" /etc/inetd.conf
            service inetd restart
            for i in {0..45}; do
              useradd student$i -m -U -s /bin/bash
              chmod 700 /home/student$i
              echo "student$i:password$i" | chpasswd
            done
            chmod o-r,o-w,o-x /var/lib/cloud
            crontab -l > /tmp/crontemp
            echo '@reboot chmod o-w /var/tmp' >> /tmp/crontemp
            echo '* * * * * for item in $(find /tmp | grep -v -e '"'"'^/tmp$'"'"'); do chmod -7 $item; done' >> /tmp/crontemp
            crontab /tmp/crontemp
            useradd $user -m -U -s /bin/bash
            usermod -aG sudo $user
            chmod 700 /home/$user
            echo "root:RootSSHTunnelingPassword" | chpasswd
            echo "$user:$password" | chpasswd
            reboot
          params:
            $user: admin
            $password: AdminPasswordCCTC2017
            $studentID: 0
      user_data_format: RAW

# ----- Pivot 2 -----

  server_1_subnet_4_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: network_4 }
      fixed_ips:
        - ip_address: 10.4.0.1
      port_security_enabled: false

  server_1_subnet_4:
    type: OS::Nova::Server
    properties:
      diskConfig: AUTO
      flavor: cy.large
      image: Debian Jessie
      name: H4-Pivot
      networks:
        - port: { get_resource: server_1_subnet_4_port }
      user_data:
        str_replace:
          template: |
            #!/bin/bash
            echo 127.0.0.1 $(hostname) >> /etc/hosts
            sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config
            export DEBIAN_FRONTEND=noninteractive
            apt-get update
            apt-get -y install tcpdump iptables-persistent
            chmod u+s /usr/sbin/tcpdump
            echo 'PATH="/sbin:/usr/sbin:/usr/local/sbin:$PATH"' >> /etc/bash.bashrc
            #Policy: Reject all
            iptables -P INPUT DROP
            iptables -P FORWARD DROP
            iptables -P OUTPUT DROP
            #All connections to self allowed
            iptables -A INPUT -s localhost -j ACCEPT
            iptables -A INPUT -s 10.4.0.1 -j ACCEPT
            iptables -A OUTPUT -d localhost -j ACCEPT
            iptables -A OUTPUT -d 10.4.0.1 -j ACCEPT
            #Access from admin box
            iptables -A INPUT -s 10.0.0.1 -j ACCEPT
            iptables -A OUTPUT -d 10.0.0.1 -j ACCEPT
            #Access to reverse insider
            iptables -A INPUT -s 10.5.0.1 -p icmp -j ACCEPT
            iptables -A OUTPUT -d 10.5.0.1 -p icmp -j ACCEPT
            iptables -A INPUT -s 10.5.0.1 -p tcp --dport 22 -j ACCEPT
            iptables -A OUTPUT -d 10.5.0.1 -p tcp --sport 22 -j ACCEPT
            #Access to targets
            iptables -A INPUT -s 10.6.0.0/24 -j ACCEPT
            iptables -A OUTPUT -d 10.6.0.0/24 -j ACCEPT
            #Access from previous pivot
            iptables -A INPUT -s 10.1.0.1 -j ACCEPT
            iptables -A OUTPUT -d 10.1.0.1 -j ACCEPT
            #Reject everything else
            iptables -A INPUT -t filter -j REJECT
            iptables -A OUTPUT -t filter -j REJECT
            iptables-save > /etc/iptables/rules.v4
            echo "MaxSessions 240" >> /etc/ssh/sshd_config
            service ssh restart
            echo "instances = unlimited" /etc/inetd.conf
            service inetd restart
            useradd tunnel -m -U -s /usr/sbin/nologin
            echo "tunnel:password" | chpasswd
            for i in {0..45}; do
              useradd student$i -m -U -s /bin/bash
              chmod 700 /home/student$i
              echo "student$i:password$i" | chpasswd
            done
            chmod o-r,o-w,o-x /var/lib/cloud
            crontab -l > /tmp/crontemp
            echo '@reboot chmod o-w /var/tmp' >> /tmp/crontemp
            echo '* * * * * for item in $(find /tmp | grep -v -e '"'"'^/tmp$'"'"'); do chmod -7 $item; done' >> /tmp/crontemp
            crontab /tmp/crontemp
            useradd $user -m -U -s /bin/bash
            usermod -aG sudo $user
            chmod 700 /home/$user
            echo "root:RootSSHTunnelingPassword" | chpasswd
            echo "$user:$password" | chpasswd
            reboot
          params:
            $user: admin
            $password: AdminPasswordCCTC2017
            $studentID: 0
      user_data_format: RAW

# ----- Reverse Network 2 -----

  server_1_subnet_5_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: network_5 }
      fixed_ips:
        - ip_address: 10.5.0.1
      port_security_enabled: false

  server_1_subnet_5:
    type: OS::Nova::Server
    properties:
      diskConfig: AUTO
      flavor: cy.large
      image: Debian Jessie      
      name: H5-1-Reverse-Insider
      networks:
        - port: { get_resource: server_1_subnet_5_port }
      user_data:
        str_replace:
          template: |
            #!/bin/bash
            echo 127.0.0.1 $(hostname) >> /etc/hosts
            sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config
            export DEBIAN_FRONTEND=noninteractive
            apt-get update
            apt-get -y install tcpdump telnetd nginx iptables-persistent
            chmod u+s /usr/sbin/tcpdump
            echo 'PATH="/sbin:/usr/sbin:/usr/local/sbin:$PATH"' >> /etc/bash.bashrc
            #Policy: Reject all
            iptables -P INPUT DROP
            iptables -P FORWARD DROP
            iptables -P OUTPUT DROP
            #All connections to self allowed
            iptables -A INPUT -s localhost -j ACCEPT
            iptables -A INPUT -s 10.5.0.1 -j ACCEPT
            iptables -A OUTPUT -d localhost -j ACCEPT
            iptables -A OUTPUT -d 10.5.0.1 -j ACCEPT
            #Access from admin box
            iptables -A INPUT -s 10.0.0.1 -j ACCEPT
            iptables -A OUTPUT -d 10.0.0.1 -j ACCEPT
            #Can accept input to floating IP on 23
            iptables -A INPUT -s 10.50.0.0/16 -p tcp --dport 23 -j ACCEPT
            iptables -A OUTPUT -d 10.50.0.0/16 -p tcp --sport 23 -j ACCEPT
            #Access to internal targets
            iptables -A INPUT -s 10.5.0.0/24 -j ACCEPT
            iptables -A OUTPUT -d 10.5.0.0/24 -j ACCEPT
            #Access to pivot
            iptables -A INPUT -s 10.4.0.1 -p icmp -j ACCEPT
            iptables -A OUTPUT -d 10.4.0.1 -p icmp -j ACCEPT
            iptables -A INPUT -s 10.4.0.1 -p tcp --sport 22 -j ACCEPT
            iptables -A OUTPUT -d 10.4.0.1 -p tcp --dport 22 -j ACCEPT
            #Reject everything else
            iptables -A INPUT -t filter -j REJECT
            iptables -A OUTPUT -t filter -j REJECT
            iptables-save > /etc/iptables/rules.v4
            cat > /var/www/html/index.html <<__EOF__
            <html>
            You have accessed $(hostname) at $(/sbin/ifconfig eth0 | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}') via HTTP!
            <html>
            __EOF__
            mkdir /usr/share/cctc
            cat > /usr/share/cctc/file.txt <<__EOF__
            You have accessed $(hostname) at $(/sbin/ifconfig eth0 | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}') via login!
            __EOF__
            echo "MaxSessions 240" >> /etc/ssh/sshd_config
            service ssh restart
            echo "instances = unlimited" /etc/inetd.conf
            service inetd restart
            useradd tunnel -m -U -s /usr/sbin/nologin
            echo "tunnel:password" | chpasswd
            for i in {0..45}; do
              useradd student$i -m -U -s /bin/bash
              chmod 700 /home/student$i
              echo "student$i:password$i" | chpasswd
            done
            chmod o-r,o-w,o-x /var/lib/cloud
            crontab -l > /tmp/crontemp
            echo '@reboot chmod o-w /var/tmp' >> /tmp/crontemp
            echo '* * * * * for item in $(find /tmp | grep -v -e '"'"'^/tmp$'"'"'); do chmod -7 $item; done' >> /tmp/crontemp
            crontab /tmp/crontemp
            useradd $user -m -U -s /bin/bash
            usermod -aG sudo $user
            chmod 700 /home/$user
            echo "root:RootSSHTunnelingPassword" | chpasswd
            echo "$user:$password" | chpasswd
            reboot
          params:
            $user: admin
            $password: AdminPasswordCCTC2017
            $studentID: 0
      user_data_format: RAW

  server_2_subnet_5_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: network_5 }
      fixed_ips:
        - ip_address: 10.5.0.2
      port_security_enabled: false

  server_2_subnet_5:
    type: OS::Nova::Server
    properties:
      diskConfig: AUTO
      flavor: cy.large
      image: Debian Jessie      
      name: H5-2-Reverse-Target
      networks:
        - port: { get_resource: server_2_subnet_5_port }
      user_data:
        str_replace:
          template: |
            #!/bin/bash
            echo 127.0.0.1 $(hostname) >> /etc/hosts
            sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config
            export DEBIAN_FRONTEND=noninteractive
            apt-get update
            apt-get -y install tcpdump nginx proftpd iptables-persistent
            chmod u+s /usr/sbin/tcpdump
            echo 'PATH="/sbin:/usr/sbin:/usr/local/sbin:$PATH"' >> /etc/bash.bashrc
            #Policy: Reject all
            iptables -P INPUT DROP
            iptables -P FORWARD DROP
            iptables -P OUTPUT DROP
            #All connections to self allowed
            iptables -A INPUT -s localhost -j ACCEPT
            iptables -A INPUT -s 10.5.0.2 -j ACCEPT
            iptables -A OUTPUT -d localhost -j ACCEPT
            iptables -A OUTPUT -d 10.5.0.2 -j ACCEPT
            #Access from admin box
            iptables -A INPUT -s 10.0.0.1 -j ACCEPT
            iptables -A OUTPUT -d 10.0.0.1 -j ACCEPT
            #Block SSH
            iptables -A INPUT -d 10.5.0.2 -p tcp --dport 22 -j REJECT
            iptables -A OUTPUT -s 10.5.0.2 -p tcp --sport 22 -j REJECT
            #Access to internal targets
            iptables -A INPUT -s 10.5.0.0/24 -j ACCEPT
            iptables -A OUTPUT -d 10.5.0.0/24 -j ACCEPT
            #Reject everything else
            iptables -A INPUT -t filter -j REJECT
            iptables -A OUTPUT -t filter -j REJECT
            iptables-save > /etc/iptables/rules.v4
            cat > /var/www/html/index.html <<__EOF__
            <html>
            You have accessed $(hostname) at $(/sbin/ifconfig eth0 | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}') via HTTP!
            <html>
            __EOF__
            cat > /etc/proftpd/conf.d/anonymous.conf <<"__EOF__"
            <Anonymous ~ftp>
              User				ftp
              Group				nogroup
              # We want clients to be able to login with "anonymous" as well as "ftp"
              UserAlias			anonymous ftp
              # Cosmetic changes, all files belongs to ftp user
              DirFakeUser	on ftp
              DirFakeGroup on ftp

              RequireValidShell		off

              # Limit the maximum number of anonymous logins
              MaxClients			10

              # We want 'welcome.msg' displayed at login, and '.message' displayed
              # in each newly chdired directory.
              DisplayLogin			welcome.msg
              DisplayChdir		.message

              # Limit WRITE everywhere in the anonymous chroot
              <Directory *>
                <Limit WRITE>
                  DenyAll
                </Limit>
              </Directory>

              # Uncomment this if you're brave.
              # <Directory incoming>
              #   # Umask 022 is a good standard umask to prevent new files and dirs
              #   # (second parm) from being group and world writable.
              #   Umask				022  022
              #            <Limit READ WRITE>
              #            DenyAll
              #            </Limit>
              #            <Limit STOR>
              #            AllowAll
              #            </Limit>
              # </Directory>

            </Anonymous>
            __EOF__
            service proftpd restart
            cat > /srv/ftp/ftp.txt <<__EOF__
            You have accessed $(hostname) at $(/sbin/ifconfig eth0 | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}') via FTP!
            __EOF__
            mkdir /usr/share/cctc
            cat > /usr/share/cctc/file.txt <<__EOF__
            You have accessed $(hostname) at $(/sbin/ifconfig eth0 | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}') via login!
            __EOF__
            echo "MaxSessions 240" >> /etc/ssh/sshd_config
            service ssh restart
            echo "instances = unlimited" /etc/inetd.conf
            service inetd restart
            for i in {0..45}; do
              useradd student$i -m -U -s /bin/bash
              chmod 700 /home/student$i
              echo "student$i:password$i" | chpasswd
            done
            chmod o-r,o-w,o-x /var/lib/cloud
            crontab -l > /tmp/crontemp
            echo '@reboot chmod o-w /var/tmp' >> /tmp/crontemp
            echo '* * * * * for item in $(find /tmp | grep -v -e '"'"'^/tmp$'"'"'); do chmod -7 $item; done' >> /tmp/crontemp
            crontab /tmp/crontemp
            useradd $user -m -U -s /bin/bash
            usermod -aG sudo $user
            chmod 700 /home/$user
            echo "root:RootSSHTunnelingPassword" | chpasswd
            echo "$user:$password" | chpasswd
            reboot
          params:
            $user: admin
            $password: AdminPasswordCCTC2017
            $studentID: 0
      user_data_format: RAW

  server_3_subnet_5_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: network_5 }
      fixed_ips:
        - ip_address: 10.5.0.3
      port_security_enabled: false

  server_3_subnet_5:
    type: OS::Nova::Server
    properties:
      diskConfig: AUTO
      flavor: cy.large
      image: Debian Jessie      
      name: H5-3-Reverse-Pivot
      networks:
        - port: { get_resource: server_3_subnet_5_port }
      user_data:
        str_replace:
          template: |
            #!/bin/bash
            echo 127.0.0.1 $(hostname) >> /etc/hosts
            sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config
            export DEBIAN_FRONTEND=noninteractive
            apt-get update
            apt-get -y install tcpdump telnetd iptables-persistent
            chmod u+s /usr/sbin/tcpdump
            echo 'PATH="/sbin:/usr/sbin:/usr/local/sbin:$PATH"' >> /etc/bash.bashrc
            #Policy: Reject all
            iptables -P INPUT DROP
            iptables -P FORWARD DROP
            iptables -P OUTPUT DROP
            #All connections to self allowed
            iptables -A INPUT -s localhost -j ACCEPT
            iptables -A INPUT -s 10.5.0.3 -j ACCEPT
            iptables -A OUTPUT -d localhost -j ACCEPT
            iptables -A OUTPUT -d 10.5.0.3 -j ACCEPT
            #Access from admin box
            iptables -A INPUT -s 10.0.0.1 -j ACCEPT
            iptables -A OUTPUT -d 10.0.0.1 -j ACCEPT
            #Access to internal targets
            iptables -A INPUT -s 10.5.0.0/24 -j ACCEPT
            iptables -A OUTPUT -d 10.5.0.0/24 -j ACCEPT
            #Reject everything else
            iptables -A INPUT -t filter -j REJECT
            iptables -A OUTPUT -t filter -j REJECT
            iptables-save > /etc/iptables/rules.v4
            mkdir /usr/share/cctc
            cat > /usr/share/cctc/file.txt <<__EOF__
            You have accessed $(hostname) at $(/sbin/ifconfig eth0 | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}') via login!
            __EOF__
            echo "MaxSessions 240" >> /etc/ssh/sshd_config
            service ssh restart
            echo "instances = unlimited" /etc/inetd.conf
            service inetd restart
            useradd tunnel -m -U -s /usr/sbin/nologin
            echo "tunnel:password" | chpasswd
            for i in {0..45}; do
              useradd student$i -m -U -s /bin/bash
              chmod 700 /home/student$i
              echo "student$i:password$i" | chpasswd
            done
            chmod o-r,o-w,o-x /var/lib/cloud
            crontab -l > /tmp/crontemp
            echo '@reboot chmod o-w /var/tmp' >> /tmp/crontemp
            echo '* * * * * for item in $(find /tmp | grep -v -e '"'"'^/tmp$'"'"'); do chmod -7 $item; done' >> /tmp/crontemp
            crontab /tmp/crontemp
            useradd $user -m -U -s /bin/bash
            usermod -aG sudo $user
            chmod 700 /home/$user
            echo "root:RootSSHTunnelingPassword" | chpasswd
            echo "$user:$password" | chpasswd
            reboot
          params:
            $user: admin
            $password: AdminPasswordCCTC2017
            $studentID: 0
      user_data_format: RAW

# ----- Target Network 2 -----

  server_1_subnet_6_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: network_6 }
      fixed_ips:
        - ip_address: 10.6.0.1
      port_security_enabled: false

  server_1_subnet_6:
    type: OS::Nova::Server
    properties:
      diskConfig: AUTO
      flavor: cy.large
      image: Debian Jessie      
      name: H6-1-Target
      networks:
        - port: { get_resource: server_1_subnet_6_port }
      user_data:
        str_replace:
          template: |
            #!/bin/bash
            echo 127.0.0.1 $(hostname) >> /etc/hosts
            sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config
            export DEBIAN_FRONTEND=noninteractive
            apt-get update
            apt-get -y install tcpdump nginx proftpd iptables-persistent
            chmod u+s /usr/sbin/tcpdump
            echo 'PATH="/sbin:/usr/sbin:/usr/local/sbin:$PATH"' >> /etc/bash.bashrc
            #Policy: Reject all
            iptables -P INPUT DROP
            iptables -P FORWARD DROP
            iptables -P OUTPUT DROP
            #All connections to self allowed
            iptables -A INPUT -s localhost -j ACCEPT
            iptables -A INPUT -s 10.6.0.1 -j ACCEPT
            iptables -A OUTPUT -d localhost -j ACCEPT
            iptables -A OUTPUT -d 10.6.0.1 -j ACCEPT
            #Access from admin box
            iptables -A INPUT -s 10.0.0.1 -j ACCEPT
            iptables -A OUTPUT -d 10.0.0.1 -j ACCEPT
            #Block SSH
            iptables -A INPUT -d 10.6.0.1 -p tcp --dport 22 -j REJECT
            iptables -A OUTPUT -s 10.6.0.1 -p tcp --sport 22 -j REJECT
            #Access from pivot
            iptables -A INPUT -s 10.4.0.0/24 -j ACCEPT
            iptables -A OUTPUT -d 10.4.0.0/24 -j ACCEPT
            #Reject everything else
            iptables -A INPUT -t filter -j REJECT
            iptables -A OUTPUT -t filter -j REJECT
            iptables-save > /etc/iptables/rules.v4
            cat > /var/www/html/index.html <<__EOF__
            <html>
            You have accessed $(hostname) at $(/sbin/ifconfig eth0 | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}') via HTTP!
            <html>
            __EOF__
            cat > /etc/proftpd/conf.d/anonymous.conf <<"__EOF__"
            <Anonymous ~ftp>
              User				ftp
              Group				nogroup
              # We want clients to be able to login with "anonymous" as well as "ftp"
              UserAlias			anonymous ftp
              # Cosmetic changes, all files belongs to ftp user
              DirFakeUser	on ftp
              DirFakeGroup on ftp

              RequireValidShell		off

              # Limit the maximum number of anonymous logins
              MaxClients			10

              # We want 'welcome.msg' displayed at login, and '.message' displayed
              # in each newly chdired directory.
              DisplayLogin			welcome.msg
              DisplayChdir		.message

              # Limit WRITE everywhere in the anonymous chroot
              <Directory *>
                <Limit WRITE>
                  DenyAll
                </Limit>
              </Directory>

              # Uncomment this if you're brave.
              # <Directory incoming>
              #   # Umask 022 is a good standard umask to prevent new files and dirs
              #   # (second parm) from being group and world writable.
              #   Umask				022  022
              #            <Limit READ WRITE>
              #            DenyAll
              #            </Limit>
              #            <Limit STOR>
              #            AllowAll
              #            </Limit>
              # </Directory>

            </Anonymous>
            __EOF__
            service proftpd restart
            cat > /srv/ftp/ftp.txt <<__EOF__
            You have accessed $(hostname) at $(/sbin/ifconfig eth0 | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}') via FTP!
            __EOF__
            mkdir /usr/share/cctc
            cat > /usr/share/cctc/file.txt <<__EOF__
            You have accessed $(hostname) at $(/sbin/ifconfig eth0 | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}') via login!
            __EOF__
            echo "MaxSessions 240" >> /etc/ssh/sshd_config
            service ssh restart
            echo "instances = unlimited" /etc/inetd.conf
            service inetd restart
            for i in {0..45}; do
              useradd student$i -m -U -s /bin/bash
              chmod 700 /home/student$i
              echo "student$i:password$i" | chpasswd
            done
            chmod o-r,o-w,o-x /var/lib/cloud
            crontab -l > /tmp/crontemp
            echo '@reboot chmod o-w /var/tmp' >> /tmp/crontemp
            echo '* * * * * for item in $(find /tmp | grep -v -e '"'"'^/tmp$'"'"'); do chmod -7 $item; done' >> /tmp/crontemp
            crontab /tmp/crontemp
            useradd $user -m -U -s /bin/bash
            usermod -aG sudo $user
            chmod 700 /home/$user
            echo "root:RootSSHTunnelingPassword" | chpasswd
            echo "$user:$password" | chpasswd
            reboot
          params:
            $user: admin
            $password: AdminPasswordCCTC2017
            $studentID: 0
      user_data_format: RAW

  server_57_subnet_6_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: network_6 }
      fixed_ips:
        - ip_address: 10.6.0.57
      port_security_enabled: false

  server_57_subnet_6:
    type: OS::Nova::Server
    properties:
      diskConfig: AUTO
      flavor: cy.large
      image: Debian Jessie      
      name: H6-57-Target
      networks:
        - port: { get_resource: server_57_subnet_6_port }
      user_data:
        str_replace:
          template: |
            #!/bin/bash
            echo 127.0.0.1 $(hostname) >> /etc/hosts
            sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config
            export DEBIAN_FRONTEND=noninteractive
            apt-get update
            apt-get -y install tcpdump nginx proftpd iptables-persistent
            chmod u+s /usr/sbin/tcpdump
            echo 'PATH="/sbin:/usr/sbin:/usr/local/sbin:$PATH"' >> /etc/bash.bashrc
            #Policy: Reject all
            iptables -P INPUT DROP
            iptables -P FORWARD DROP
            iptables -P OUTPUT DROP
            #All connections to self allowed
            iptables -A INPUT -s localhost -j ACCEPT
            iptables -A INPUT -s 10.6.0.57 -j ACCEPT
            iptables -A OUTPUT -d localhost -j ACCEPT
            iptables -A OUTPUT -d 10.6.0.57 -j ACCEPT
            #Access from admin box
            iptables -A INPUT -s 10.0.0.1 -j ACCEPT
            iptables -A OUTPUT -d 10.0.0.1 -j ACCEPT
            #Block SSH
            iptables -A INPUT -d 10.6.0.57 -p tcp --dport 22 -j REJECT
            iptables -A OUTPUT -s 10.6.0.57 -p tcp --sport 22 -j REJECT
            #Access from pivot
            iptables -A INPUT -s 10.4.0.0/24 -j ACCEPT
            iptables -A OUTPUT -d 10.4.0.0/24 -j ACCEPT
            #Reject everything else
            iptables -A INPUT -t filter -j REJECT
            iptables -A OUTPUT -t filter -j REJECT
            iptables-save > /etc/iptables/rules.v4
            cat > /var/www/html/index.html <<__EOF__
            <html>
            You have accessed $(hostname) at $(/sbin/ifconfig eth0 | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}') via HTTP!
            <html>
            __EOF__
            cat > /etc/proftpd/conf.d/anonymous.conf <<"__EOF__"
            <Anonymous ~ftp>
              User				ftp
              Group				nogroup
              # We want clients to be able to login with "anonymous" as well as "ftp"
              UserAlias			anonymous ftp
              # Cosmetic changes, all files belongs to ftp user
              DirFakeUser	on ftp
              DirFakeGroup on ftp

              RequireValidShell		off

              # Limit the maximum number of anonymous logins
              MaxClients			10

              # We want 'welcome.msg' displayed at login, and '.message' displayed
              # in each newly chdired directory.
              DisplayLogin			welcome.msg
              DisplayChdir		.message

              # Limit WRITE everywhere in the anonymous chroot
              <Directory *>
                <Limit WRITE>
                  DenyAll
                </Limit>
              </Directory>

              # Uncomment this if you're brave.
              # <Directory incoming>
              #   # Umask 022 is a good standard umask to prevent new files and dirs
              #   # (second parm) from being group and world writable.
              #   Umask				022  022
              #            <Limit READ WRITE>
              #            DenyAll
              #            </Limit>
              #            <Limit STOR>
              #            AllowAll
              #            </Limit>
              # </Directory>

            </Anonymous>
            __EOF__
            service proftpd restart
            cat > /srv/ftp/ftp.txt <<__EOF__
            You have accessed $(hostname) at $(/sbin/ifconfig eth0 | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}') via FTP!
            __EOF__
            mkdir /usr/share/cctc
            cat > /usr/share/cctc/file.txt <<__EOF__
            You have accessed $(hostname) at $(/sbin/ifconfig eth0 | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}') via login!
            __EOF__
            echo "MaxSessions 240" >> /etc/ssh/sshd_config
            service ssh restart
            echo "instances = unlimited" /etc/inetd.conf
            service inetd restart
            for i in {0..45}; do
              useradd student$i -m -U -s /bin/bash
              chmod 700 /home/student$i
              echo "student$i:password$i" | chpasswd
            done
            chmod o-r,o-w,o-x /var/lib/cloud
            crontab -l > /tmp/crontemp
            echo '@reboot chmod o-w /var/tmp' >> /tmp/crontemp
            echo '* * * * * for item in $(find /tmp | grep -v -e '"'"'^/tmp$'"'"'); do chmod -7 $item; done' >> /tmp/crontemp
            crontab /tmp/crontemp
            useradd $user -m -U -s /bin/bash
            usermod -aG sudo $user
            chmod 700 /home/$user
            echo "root:RootSSHTunnelingPassword" | chpasswd
            echo "$user:$password" | chpasswd
            reboot
          params:
            $user: admin
            $password: AdminPasswordCCTC2017
            $studentID: 0
      user_data_format: RAW
